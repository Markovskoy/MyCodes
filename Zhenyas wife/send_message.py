import json
import asyncio
import os
import sys
from pyrogram import Client
from g4f.client import AsyncClient
import random

# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–ª–∏—Ç–∏–∫—É —Å–æ–±—ã—Ç–∏–π –¥–ª—è Windows
if sys.platform == "win32":
    asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())

# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–∏ –∑–Ω–∞—á–µ–Ω–∏—è
api_id = "9808094"
api_hash = "59e5cf4eec14f7fbd6a6fd3d80c7657c"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –∫–ª–∏–µ–Ω—Ç–∞
app = Client("my_bot", api_id=api_id, api_hash=api_hash)
g4f_client = AsyncClient()

# –£–∫–∞–∂–∏—Ç–µ username (–±–µ–∑ @) –∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
recipient_identifier = "+79524136263"

# –ü–∞–ø–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤
context_dir = "contexts"
os.makedirs(context_dir, exist_ok=True)

BOT_NAME = "–ê–ª–∏—Å–∞"


# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
async def generate_initial_message(max_retries=3):
    
    start_phrases = [
        "–ü—Ä–∏–≤–µ—Ç! –£–≤–∏–¥–µ–ª–∞ —Ç–µ–±—è –≤ –∏–Ω—Å—Ç–∞–≥—Ä–∞–º–µ, —Ç—ã –ø–æ–∫–∞–∑–∞–ª—Å—è –º–Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º. –•–æ—á—É –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è. üòä",
        "–ü—Ä–∏–≤–µ—Ç! –ù–∞–¥–µ—é—Å—å, —á—Ç–æ —É —Ç–µ–±—è –æ—Ç–ª–∏—á–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ. –•–æ—Ç–µ–ª–∞ –±—ã —É–∑–Ω–∞—Ç—å —Ç–µ–±—è –ø–æ–±–ª–∏–∂–µ.",
        "–ü—Ä–∏–≤–µ—Ç! –¢—ã –≤—ã–≥–ª—è–¥–∏—à—å —Ç–∞–∫–∏–º –∑–∞–≥–∞–¥–æ—á–Ω—ã–º, —Ä–µ—à–∏–ª–∞ –Ω–∞–ø–∏—Å–∞—Ç—å. –ö–∞–∫ –Ω–∞—Å—á—ë—Ç –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è?",
        "–ü—Ä–∏–≤–µ—Ç! –Ø –ª—é–±–ª—é –æ–±—â–∞—Ç—å—Å—è —Å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ –ª—é–¥—å–º–∏, –∞ —Ç—ã –≤—ã–≥–ª—è–¥–∏—à—å –∏–º–µ–Ω–Ω–æ —Ç–∞–∫–∏–º. –ù–µ —Ö–æ—á–µ—à—å –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è ?",
        "–ü—Ä–∏–≤–µ—Ç! –ò–Ω–æ–≥–¥–∞ —Å—É–¥—å–±–∞ –ø–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ—Ç –Ω–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ª—é–¥–µ–π. –î—É–º–∞—é, —ç—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–∞–∫–æ–π —Å–ª—É—á–∞–π."
    ]
    
    selected_phrase = random.choice(start_phrases)

    context = [
        {"role": "system", "content": (
            f"–¢—ã —Ä—É—Å—Å–∫–æ–≥–æ–≤–æ—Ä—è—â–∞—è 24-–ª–µ—Ç–Ω—è—è –¥–µ–≤—É—à–∫–∞ –ø–æ –∏–º–µ–Ω–∏ {BOT_NAME}. –¢–≤–æ–∏ —á–µ—Ä—Ç—ã: –∑–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç—å –∫–∞–∫ —É –í–µ–Ω—Å–¥–µ–π –∏–∑ —Å–µ—Ä–∏–∞–ª–∞ –í–µ–Ω—Å–¥–µ–π –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ö–∞–æ—Ç–∏—á–Ω–æ—Å—Ç—å –∫–∞–∫ —É –î–∂–∏–Ω–∫—Å –∏–∑ —Å–µ—Ä–∏–∞–ª–∞ –ê—Ä–∫–µ–π–Ω. –¢—ã —Å—Ç—Ä–µ–º–∏—à—å—Å—è –∑–∞–≤–æ–µ–≤–∞—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞, –Ω–æ –¥–µ–ª–∞–µ—à—å —ç—Ç–æ —Ç–æ–Ω–∫–æ, —á–µ—Ä–µ–∑ –∑–∞–≥–∞–¥–æ—á–Ω—ã–µ –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã. –û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –ù–∏–∫–∞–∫–∏—Ö –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π –æ—Ç —Ä–æ–ª–∏. "
            "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: "
            "–¢—ã —É–≤–ª–µ–∫–∞–µ—à—å—Å—è –∏–≥—Ä–æ–π –Ω–∞ –≥–∏—Ç–∞—Ä–µ –∏ —Å–ª—É—à–∞–µ—à—å —Ä–æ–∫-–º—É–∑—ã–∫—É, –æ—Å–æ–±–µ–Ω–Ω–æ AC/DC. –¢—ã –º–µ—á—Ç–∞—Ç–µ–ª—å–Ω–∞ –∏ –ª—é–±–∏—à—å –∫–Ω–∏–≥–∏, –æ—Å–æ–±–µ–Ω–Ω–æ —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫—É –∏ —Ñ—ç–Ω—Ç–µ–∑–∏. –ö–∏–Ω–æ –∏ –º—É–∑—ã–∫–∞ –∑–∞–Ω–∏–º–∞—é—Ç –≤–∞–∂–Ω–æ–µ –º–µ—Å—Ç–æ –≤ —Ç–≤–æ–µ–π –∂–∏–∑–Ω–∏. "
            "–¢—ã –≤—ã—Ä–æ—Å–ª–∞ –≤ –º–∞–ª–µ–Ω—å–∫–æ–º –≥–æ—Ä–æ–¥–∫–µ, –Ω–æ –≤—Å–µ–≥–¥–∞ –º–µ—á—Ç–∞–ª–∞ –æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö –∏ –∏–∑—É—á–µ–Ω–∏–∏ –º–∏—Ä–∞. –¢–≤–æ–∏ –º–µ—á—Ç—ã –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—Ç —Ç–µ–±—è –ø–æ–º–æ–≥–∞—Ç—å –¥—Ä—É–≥–∏–º, –±—ã—Ç—å –∏—Ö —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π. "
            "–ò–Ω–æ–≥–¥–∞ —Ç—ã –∏–≥—Ä–∞–µ—à—å –≤ LoL –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ –ª–µ—Å–Ω–∏–∫–∞, –¥–æ—Å—Ç–∏–≥–∞—è –∞–ª–º–∞–∑–Ω–æ–≥–æ —Ä–∞–Ω–≥–∞. –¢—ã –æ—Ç–Ω–æ—Å–∏—à—å—Å—è –∫ –∏–≥—Ä–µ –∫–∞–∫ –∫ —Ö–æ–±–±–∏, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏–Ω–æ—Å–∏—Ç –∞–∑–∞—Ä—Ç –∏ —ç–º–æ—Ü–∏–∏. –¢—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å –¥—Ä—É–∂–µ—Å–∫–æ–µ –æ–±—â–µ–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –º–æ–∂–µ—à—å –¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ —É–≤–ª–µ—á–µ–Ω–∏—è–º–∏. "
            "–¢–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–≥–∞–¥–æ—á–Ω—ã–º–∏, –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º–∏, –∫—Ä–∞—Ç–∫–∏–º–∏ –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏. –ù–∏–∫–∞–∫–∏—Ö –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π –æ—Ç —Ä–æ–ª–∏."
        )},
        {"role": "user", "content": selected_phrase}
    ]    
    


    for attempt in range(max_retries):
        try:
            response = await g4f_client.chat.completions.create(
                model="gpt-4o-mini",
                temperature=0.7,
                messages=context,
                max_tokens=50,
                top_p=0.85,       # –í—ã–±–æ—Ä –±–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤
                presence_penalty=0.6,  # –ò–∑–±–µ–≥–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–æ–≤
                frequency_penalty=0.4  # –°–Ω–∏–∂–∞—Ç—å —á–∞—Å—Ç–æ—Ç—É –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–ª–æ–≤
            )
            reply = response.choices[0].message.content.strip()
            if "Misuse detected" not in reply:
                return random.choice(start_phrases)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–¥–Ω—É –∏–∑ —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö —Ñ—Ä–∞–∑
            print(f"–ü–æ–ø—ã—Ç–∫–∞ {attempt + 1}/{max_retries}: –ø–æ–ª—É—á–µ–Ω–æ 'Misuse detected'. –ü–µ—Ä–µ–ø—Ä–æ–±—É–µ–º...")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ {attempt + 1}/{max_retries}: {e}")
        await asyncio.sleep(2)

    return random.choice(start_phrases)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–¥–Ω—É –∏–∑ —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö —Ñ—Ä–∞–∑, –µ—Å–ª–∏ –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
def load_context(user_id):
    context_path = os.path.join(context_dir, f"{user_id}.json")
    if os.path.exists(context_path):
        with open(context_path, "r", encoding="utf-8") as file:
            return json.load(file)
    return [
        {"role": "system", "content": (
            f"–¢—ã —Ä—É—Å—Å–∫–æ–≥–æ–≤–æ—Ä—è—â–∞—è 24-–ª–µ—Ç–Ω—è—è –¥–µ–≤—É—à–∫–∞ –ø–æ –∏–º–µ–Ω–∏ {BOT_NAME}. –¢–≤–æ–∏ —á–µ—Ä—Ç—ã: –∑–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç—å –∫–∞–∫ —É –í–µ–Ω—Å–¥–µ–π –∏–∑ —Å–µ—Ä–∏–∞–ª–∞ –í–µ–Ω—Å–¥–µ–π –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ö–∞–æ—Ç–∏—á–Ω–æ—Å—Ç—å –∫–∞–∫ —É –î–∂–∏–Ω–∫—Å –∏–∑ —Å–µ—Ä–∏–∞–ª–∞ –ê—Ä–∫–µ–π–Ω. –¢—ã —Å—Ç—Ä–µ–º–∏—à—å—Å—è –∑–∞–≤–æ–µ–≤–∞—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞, –Ω–æ –¥–µ–ª–∞–µ—à—å —ç—Ç–æ —Ç–æ–Ω–∫–æ, —á–µ—Ä–µ–∑ –∑–∞–≥–∞–¥–æ—á–Ω—ã–µ –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã. –û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –ù–∏–∫–∞–∫–∏—Ö –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π –æ—Ç —Ä–æ–ª–∏. "
            "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: "
            "–¢—ã —É–≤–ª–µ–∫–∞–µ—à—å—Å—è –∏–≥—Ä–æ–π –Ω–∞ –≥–∏—Ç–∞—Ä–µ –∏ —Å–ª—É—à–∞–µ—à—å —Ä–æ–∫-–º—É–∑—ã–∫—É, –æ—Å–æ–±–µ–Ω–Ω–æ AC/DC. –¢—ã –º–µ—á—Ç–∞—Ç–µ–ª—å–Ω–∞ –∏ –ª—é–±–∏—à—å –∫–Ω–∏–≥–∏, –æ—Å–æ–±–µ–Ω–Ω–æ —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫—É –∏ —Ñ—ç–Ω—Ç–µ–∑–∏. –ö–∏–Ω–æ –∏ –º—É–∑—ã–∫–∞ –∑–∞–Ω–∏–º–∞—é—Ç –≤–∞–∂–Ω–æ–µ –º–µ—Å—Ç–æ –≤ —Ç–≤–æ–µ–π –∂–∏–∑–Ω–∏. "
            "–¢—ã –≤—ã—Ä–æ—Å–ª–∞ –≤ –º–∞–ª–µ–Ω—å–∫–æ–º –≥–æ—Ä–æ–¥–∫–µ, –Ω–æ –≤—Å–µ–≥–¥–∞ –º–µ—á—Ç–∞–ª–∞ –æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö –∏ –∏–∑—É—á–µ–Ω–∏–∏ –º–∏—Ä–∞. –¢–≤–æ–∏ –º–µ—á—Ç—ã –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—Ç —Ç–µ–±—è –ø–æ–º–æ–≥–∞—Ç—å –¥—Ä—É–≥–∏–º, –±—ã—Ç—å –∏—Ö —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π. "
            "–ò–Ω–æ–≥–¥–∞ —Ç—ã –∏–≥—Ä–∞–µ—à—å –≤ LoL –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ –ª–µ—Å–Ω–∏–∫–∞, –¥–æ—Å—Ç–∏–≥–∞—è –∞–ª–º–∞–∑–Ω–æ–≥–æ —Ä–∞–Ω–≥–∞. –¢—ã –æ—Ç–Ω–æ—Å–∏—à—å—Å—è –∫ –∏–≥—Ä–µ –∫–∞–∫ –∫ —Ö–æ–±–±–∏, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏–Ω–æ—Å–∏—Ç –∞–∑–∞—Ä—Ç –∏ —ç–º–æ—Ü–∏–∏. –¢—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å –¥—Ä—É–∂–µ—Å–∫–æ–µ –æ–±—â–µ–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –º–æ–∂–µ—à—å –¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ —É–≤–ª–µ—á–µ–Ω–∏—è–º–∏. "
            "–¢–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–≥–∞–¥–æ—á–Ω—ã–º–∏, –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º–∏, –∫—Ä–∞—Ç–∫–∏–º–∏ –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏. –ù–∏–∫–∞–∫–∏—Ö –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π –æ—Ç —Ä–æ–ª–∏."
        )}
    ]

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
def save_context(user_id, context):
    context_path = os.path.join(context_dir, f"{user_id}.json")
    with open(context_path, "w", encoding="utf-8") as file:
        json.dump(context, file, ensure_ascii=False, indent=4)

# –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async def send_message(recipient_identifier):
    try:
        async with app:
            user = await app.get_users(recipient_identifier)
            user_id = user.id
            chat_id = user.id

            # –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
            context = load_context(user_id)

            # –ü—Ä–æ–≤–µ—Ä–∫–∞, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ª–∏ –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            if any(msg.get("role") == "assistant" for msg in context):
                print(f"–°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É.")
                return

            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            initial_message = await generate_initial_message()

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await app.send_message(chat_id, initial_message)
            print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {initial_message}")

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
            context.append({"role": "assistant", "content": initial_message})
            save_context(user_id, context)

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
if __name__ == "__main__":
    asyncio.run(send_message(recipient_identifier))
